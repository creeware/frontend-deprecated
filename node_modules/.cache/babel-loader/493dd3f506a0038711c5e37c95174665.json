{"remainingRequest":"/frontend/node_modules/babel-loader/lib/index.js!/frontend/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/frontend/src/main.js","dependencies":[{"path":"/frontend/src/main.js","mtime":1551899553000},{"path":"/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1551901462000},{"path":"/frontend/node_modules/babel-loader/lib/index.js","mtime":1551901454000},{"path":"/frontend/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1551901458000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport Vue from 'vue';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport VueApollo from 'vue-apollo';\nimport App from './App.vue';\nVue.config.productionTip = false;\nvar httpLink = new HttpLink({\n  // You should use an absolute URL here\n  uri: 'http://localhost:4000/graphql'\n}); // Create the apollo client, with the Apollo caching. \n\nvar apolloClient = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache(),\n  connectToDevTools: true\n}); // Install the vue plugin for VueApollo\n\nVue.use(VueApollo);\nvar apolloProvider = new VueApollo({\n  defaultClient: apolloClient\n});\nnew Vue({\n  el: '#app',\n  apolloProvider: apolloProvider,\n  render: function render(h) {\n    return h(App);\n  }\n}).$mount('#app');",{"version":3,"sources":["/frontend/src/main.js"],"names":["Vue","ApolloClient","InMemoryCache","HttpLink","VueApollo","App","config","productionTip","httpLink","uri","apolloClient","link","cache","connectToDevTools","use","apolloProvider","defaultClient","el","render","h","$mount"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAEAL,GAAG,CAACM,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AAGA,IAAMC,QAAQ,GAAG,IAAIL,QAAJ,CAAa;AAC5B;AACAM,EAAAA,GAAG,EAAE;AAFuB,CAAb,CAAjB,C,CAKA;;AACA,IAAMC,YAAY,GAAG,IAAIT,YAAJ,CAAiB;AACpCU,EAAAA,IAAI,EAAEH,QAD8B;AAEpCI,EAAAA,KAAK,EAAE,IAAIV,aAAJ,EAF6B;AAGpCW,EAAAA,iBAAiB,EAAE;AAHiB,CAAjB,CAArB,C,CAMA;;AACAb,GAAG,CAACc,GAAJ,CAAQV,SAAR;AAEA,IAAMW,cAAc,GAAG,IAAIX,SAAJ,CAAc;AACnCY,EAAAA,aAAa,EAAEN;AADoB,CAAd,CAAvB;AAIA,IAAIV,GAAJ,CAAQ;AACNiB,EAAAA,EAAE,EAAE,MADE;AAENF,EAAAA,cAAc,EAAEA,cAFV;AAGNG,EAAAA,MAAM,EAAE,gBAAAC,CAAC;AAAA,WAAIA,CAAC,CAACd,GAAD,CAAL;AAAA;AAHH,CAAR,EAIGe,MAJH,CAIU,MAJV","sourcesContent":["import Vue from 'vue'\nimport { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport VueApollo from 'vue-apollo'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\n\nconst httpLink = new HttpLink({\n  // You should use an absolute URL here\n  uri: 'http://localhost:4000/graphql',\n})\n\n// Create the apollo client, with the Apollo caching. \nconst apolloClient = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache(),\n  connectToDevTools: true,\n})\n\n// Install the vue plugin for VueApollo\nVue.use(VueApollo)\n\nconst apolloProvider = new VueApollo({\n  defaultClient: apolloClient,\n})\n\nnew Vue({\n  el: '#app',\n  apolloProvider: apolloProvider,\n  render: h => h(App),\n}).$mount('#app')\n"]}]}